name: Validate Pull Request Metadata

on:
  pull_request:
    branches:
      - main
    types:
      - labeled
      - unlabeled
      - opened
      - reopened
      - synchronize
      - edited

env:
  LABELS: ${{ join( github.event.pull_request.labels.*.name, ' ' ) }}
  TITLE: ${{ github.event.pull_request.title }}
  NO_MILESTONE: ${{ github.event.pull_request.milestone == null }}
  NO_TYPE_LABEL: ${{ contains( join( github.event.pull_request.labels.*.name, ' ' ), 'Build' ) == false && contains( join( github.event.pull_request.labels.*.name, ' ' ), 'Documentation' ) == false && contains( join( github.event.pull_request.labels.*.name, ' ' ), 'Bug' ) == false && contains( join( github.event.pull_request.labels.*.name, ' ' ), 'Dependencies' ) == false && contains( join( github.event.pull_request.labels.*.name, ' ' ), 'Enhancement' ) == false && contains( join( github.event.pull_request.labels.*.name, ' ' ), 'New-Feature' ) == false }}
  NO_PRODUCT_LABEL: ${{ contains( join( github.event.pull_request.labels.*.name, ' ' ), 'Open source only' ) == false && contains( join( github.event.pull_request.labels.*.name, ' ' ), 'Azure API for FHIR' ) == false && contains( join( github.event.pull_request.labels.*.name, ' ' ), 'Azure Healthcare APIs' ) == false }}

jobs:
  js-title:
    name: Check PR Metadata
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            var errors = "";
            const title = "${{env.TITLE}}";
            if(title.includes('personal') || (title.length > 65)) {
              errors += '- Title of the PR to be succinct and less than 65 characters.\n';
            }

            if(${{env.NO_MILESTONE}}) {
              errors += '- Add a milestone to the PR for the sprint that it is merged (i.e. add S47).\n';
            }

            if(${{env.NO_TYPE_LABEL}}) {
              errors += '- Tag the PR with the type of update: **Bug**, **Build**, **Dependencies**, **Enhancement**, **New-Feature** or **Documentation**.\n';
            }

            if(${{env.NO_PRODUCT_LABEL}}) {
              errors += '- Tag the PR with **Open source only**, **Azure API for FHIR** (CosmosDB or common code) or **Azure Healthcare APIs** (SQL or common code) to specify where this change is intended to be released.';
            }

            if(errors != "") {
              core.setFailed(errors)
            }